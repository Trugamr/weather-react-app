{"version":3,"sources":["assets/weather-icons/clear-day.svg","assets/weather-icons/clear-night.svg","assets/weather-icons/cloudy.svg","assets/weather-icons/fog.svg","assets/weather-icons/partly-cloudy-day.svg","assets/weather-icons/partly-cloudy-night.svg","assets/weather-icons/rain.svg","assets/weather-icons/sleet.svg","assets/weather-icons/snow.svg","assets/weather-icons/wind.svg","redux/theme/theme.selectors.js","components/custom-theme-provider/custom-theme-provider.jsx","components/side-menu-icon/side-menu-icon.styles.jsx","components/search-field/search-field.styles.jsx","redux/weather/weather.types.js","redux/weather/weather.actions.js","redux/weather/weather.selectors.js","components/search-field/search-field.component.jsx","components/switch-units/switch-units.styles.jsx","components/switch-units/switch-units.component.jsx","components/header/header.styles.jsx","components/header/header.component.jsx","components/arc-range-slider/arc-range-slider.styles.jsx","redux/utils.js","components/weather-icon/weather-icon.styles.jsx","components/weather-icon/weather-icon.component.jsx","components/arc-range-slider/arc-background.component.jsx","components/arc-range-slider/arc-range-slider.component.jsx","components/brief-details/brief-details.styles.jsx","components/brief-details/brief-details.component.jsx","components/details-slider/details-slider.styles.jsx","components/weather-summary/weather-summary.styles.jsx","components/weather-summary/weather-summary.component.jsx","components/weather-info-card/weather-info-card.styles.jsx","components/weather-info-card/weather-info-card.component.jsx","components/weather-cards-list/weather-cards-list.styles.jsx","components/weather-cards-list/weather-cards-list.component.jsx","components/detailed-info/detailed-info.styles.jsx","components/detailed-info-card/detailed-info-card.styles.jsx","components/detailed-info-card/detailed-info-card.component.jsx","components/detailed-info/detailed-info.component.jsx","components/details-slider/details-slider.component.jsx","pages/weather/weather.styles.jsx","pages/weather/weather.component.jsx","pages/home/home.styles.jsx","pages/home/home.component.jsx","App.js","serviceWorker.js","redux/weather/weather.reducer.js","redux/theme/themes.data.js","redux/theme/theme.types.js","redux/theme/theme.reducer.js","redux/root.reducer.js","redux/theme/theme.actions.js","redux/weather/weather.sagas.js","redux/theme/theme.sagas.js","redux/root.saga.js","redux/store.js","index.js"],"names":["module","exports","selectCurrentTheme","createSelector","state","theme","currentTheme","mapStateToProps","createStructuredSelector","connect","children","props","styled","div","size","text","SearchFieldForm","form","SearchInput","input","WeatherActionTypes","GET_WEATHER_START","GET_WEATHER_SUCCESS","GET_WEATHER_FAILURE","SET_WEATHER_UNITS","UPDATE_WEATHER_RANGE_PROGRESS","SET_CURRENT_SLIDER_TIME","SET_CURRENT_WEATHER","getWeatherStart","query","type","payload","getWeatherSuccess","data","getWeatherFailure","error","setCurrentSliderTime","time","selectWeather","weather","selectCurrentWeather","currently","selectPlaceName","placeName","selectUnits","forecast","flags","units","selectLastSearch","search","selectCurrentSummary","currentWeather","summary","selectDailyWeather","daily","selectHourlyWeather","hourly","selectTimezone","timezone","selectCurrentSliderTime","currentSliderTime","selectLowerBoundForSlider","dailyWeather","selectCurrentWeatherIcon","icon","selectCurrentWeatherBak","currentlyBak","withRouter","dispatch","searchValue","history","match","url","useState","setSearch","queryParams","URLSearchParams","useLocation","useEffect","split","searchParam","get","push","onSubmit","event","preventDefault","name","placeholder","value","onChange","target","SwitchUnitsContainer","fontSize","setWeatherUnits","onClick","HeaderContainer","IconContainer","SearchFieldContainer","TempSwitchContainer","Header","ArcRangeSliderContainer","arch","ArcBackgroundContainer","ArcSVGContainer","ArcBackgroundOverlay","base","formatTime","hours","formatString","format","utcToZonedTime","addHours","fromUnixTime","toUpperCase","roundAndFix","n","d","m","Math","pow","round","WeatherIconContainer","WeatherIconImage","img","currentIcon","iconName","showCurrentSliderTime","ICON_MAP","clearDay","clearNight","rain","sleet","wind","fog","snow","cloudy","partlyCloudyDay","partlyCloudyNight","src","alt","ArcBackground","width","height","id","clipPathUnits","xmlns","viewBox","fill","ArcRange","progress","windowScrollListener","windowResizeListener","timeline","draggable","initRange","lowerBound","newLowerBound","updateWeatherRangeProgress","bounds","minX","maxX","seekTo","weatherIcon","document","getElementById","style","position","pointerEvents","TweenMax","set","overflow","gsap","registerPlugin","Draggable","MotionPathPlugin","tl","TimelineMax","paused","from","ease","Linear","easeNone","to","motionPath","path","seek","create","trigger","throwProps","onDrag","Update","onThrowUpdate","abs","this","x","knob","getBoundingClientRect","left","top","y","updateWeatherIconPosition","scale","Number","EPSILON","updateWeatherIconSize","window","addEventListener","applyBounds","removeEventListener","version","r","React","Component","ConnectedArcRange","ArcRangeSlider","flexCenter","css","timeStyles","BriefDetailsContainer","MinTempContainer","TempContainer","MaxTempContainer","DownSVG","opacity","UpSVG","useTheme","temperatureMin","temperature","temperatureMax","SliderContainer","CustomSlider","Slider","SliderOverlay","bottomDetail","WeatherSummaryContainer","SummaryContainer","p","WeatherInfoCardContainer","WeatherDayText","span","WeatherTempText","WeatherInfoCard","temperatureHigh","temperatureLow","avgTemp","day","toLowerCase","WeatherCardsListContainer","WeatherCardsContainer","slice","map","index","key","DetailedInfoContainer","DetailedInfoCardContainer","DetailedInfoCardTitle","DetailedInfoCardSubTitle","DetailedInfoCard","title","subtitle","precipProbability","windSpeed","humidity","visibility","uvIndex","pressure","parseFloat","toFixed","DetailsSlider","activeIndex","setActiveIndex","staticActiveIndex","onSlideChange","auto","console","log","WeatherPageContainer","TopContainer","ArchContainer","BottomContainer","WeatherPage","getQueryParams","location","HomePageContainer","HomePage","App","lastSearch","className","exact","component","Boolean","hostname","INITIAL_STATE","longitute","undefined","latitude","offset","weatherReducer","action","ThemeActionTypes","SET_CURRENT_THEME","themes","themeReducer","persistConfig","storage","whitelist","rootReducer","combineReducers","persistReducer","setCurrentTheme","getWeather","updateWeatherAfterUnitsChange","updateWeatherOnRange","onGetWeather","onSetWeatherUnits","onUpdateWeatherRangeProgress","weatherSagas","findClosestHourlyWeather","hourlyWeather","reduce","a","b","BASE_URL","select","fetch","res","json","put","message","timeDiff","currentWeatherBak","call","closestMatch","valuesToUpdate","takeLatest","throttle","all","updateThemeAfterWeatherSuccess","onGetWeatherSuccess","themeSagas","rootSaga","sagaMiddleware","createSagaMiddleware","middlewares","store","createStore","applyMiddleware","run","persistor","persistStore","ReactDOM","render","basename","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.6896418c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/clear-day.adbe34b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/clear-night.9c2a0d8d.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.8d0ca550.svg\";","module.exports = __webpack_public_path__ + \"static/media/fog.b742a618.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy-day.0fd7cfa7.svg\";","module.exports = __webpack_public_path__ + \"static/media/partly-cloudy-night.a871d3be.svg\";","module.exports = __webpack_public_path__ + \"static/media/rain.2ba6cde7.svg\";","module.exports = __webpack_public_path__ + \"static/media/sleet.f9ec606e.svg\";","module.exports = __webpack_public_path__ + \"static/media/snow.c2418c49.svg\";","module.exports = __webpack_public_path__ + \"static/media/wind.332c9448.svg\";","import { createSelector } from 'reselect'\n\nconst selectTheme = state => state.theme\n\nexport const selectCurrentTheme = createSelector(\n  [selectTheme],\n  theme => theme.currentTheme\n)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\nimport { ThemeProvider } from 'styled-components'\n\nimport { selectCurrentTheme } from '../../redux/theme/theme.selectors'\n\nconst CustomThemeProvider = ({ children, theme, ...props }) => {\n  return (\n    <ThemeProvider theme={theme} {...props}>\n      {children}\n    </ThemeProvider>\n  )\n}\n\nconst mapStateToProps = createStructuredSelector({\n  theme: selectCurrentTheme\n})\n\nexport default connect(mapStateToProps)(CustomThemeProvider)\n","import styled from 'styled-components'\n\nexport const IconContainer = styled.div`\n  width: ${({ size }) => size}px;\n  height: ${({ size }) => size}px;\n  display: flex;\n  cursor: pointer;\n\n  svg {\n    stroke: ${({ theme }) => theme.text};\n    stroke-linecap: round;\n    stroke-miterlimit: 10;\n    stroke-width: 12px;\n    flex: 1 0;\n  }\n`\n","import styled from 'styled-components'\n\nexport const SearchFieldForm = styled.form`\n  width: 100%;\n  display: flex;\n`\n\nexport const SearchInput = styled.input`\n  background: transparent;\n  border: none;\n  font-family: 'Montserrat', 'sans-serif';\n  font-weight: 300;\n  font-size: 2.2rem;\n  text-align: center;\n  color: ${({ theme }) => theme.text};\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  padding: 10px 10px;\n  box-sizing: border-box;\n  margin: auto;\n\n  :focus {\n    outline: none;\n    border: 1px solid ${({ theme }) => theme.text};\n  }\n\n  ::placeholder {\n    color: ${({ theme }) => theme.text};\n  }\n`\n","const WeatherActionTypes = {\n  GET_WEATHER_START: 'GET_WEATHER_START',\n  GET_WEATHER_SUCCESS: 'GET_WEATHER_SUCCESS',\n  GET_WEATHER_FAILURE: 'GET_WEATHER_FAILURE',\n  SET_WEATHER_UNITS: 'SET_WEATHER_UNITS',\n  UPDATE_WEATHER_RANGE_PROGRESS: 'UPDATE_WEATHER_RANGE_PROGRESS',\n  SET_CURRENT_SLIDER_TIME: 'SET_CURRENT_SLIDER_TIME',\n  SET_CURRENT_WEATHER: 'SET_CURRENT_WEATHER'\n}\n\nexport default WeatherActionTypes\n","import WeatherActionTypes from './weather.types'\n\nexport const getWeatherStart = query => ({\n  type: WeatherActionTypes.GET_WEATHER_START,\n  payload: query\n})\n\nexport const getWeatherSuccess = data => ({\n  type: WeatherActionTypes.GET_WEATHER_SUCCESS,\n  payload: data\n})\n\nexport const getWeatherFailure = error => ({\n  type: WeatherActionTypes.GET_WEATHER_FAILURE,\n  payload: error\n})\n\nexport const setWeatherUnits = units => ({\n  type: WeatherActionTypes.SET_WEATHER_UNITS,\n  payload: units\n})\n\nexport const updateWeatherRangeProgress = progress => ({\n  type: WeatherActionTypes.UPDATE_WEATHER_RANGE_PROGRESS,\n  payload: progress\n})\n\nexport const setCurrentSliderTime = time => ({\n  type: WeatherActionTypes.SET_CURRENT_SLIDER_TIME,\n  payload: time\n})\n\nexport const setCurrentWeather = weather => ({\n  type: WeatherActionTypes.SET_CURRENT_WEATHER,\n  payload: weather\n})\n","import { createSelector } from 'reselect'\n\nconst selectWeather = state => state.weather\n\nexport const selectCurrentWeather = createSelector(\n  [selectWeather],\n  weather => weather.currently\n)\n\nexport const selectWeatherError = createSelector(\n  [selectWeather],\n  weather => weather.error\n)\n\nexport const selectPlaceName = createSelector(\n  [selectWeather],\n  weather => weather.placeName\n)\n\nexport const selectForecast = createSelector(\n  [selectWeather],\n  weather => weather.forecast\n)\n\nexport const selectUnits = createSelector(\n  [selectWeather],\n  // on weather request object not local\n  weather => weather.flags.units\n)\n\nexport const selectLastSearch = createSelector(\n  [selectWeather],\n  weather => weather.search\n)\n\nexport const selectCurrentSummary = createSelector(\n  [selectCurrentWeather],\n  currentWeather =>\n    currentWeather ? currentWeather.summary : 'Summary not available.'\n)\n\nexport const selectDailyWeather = createSelector([selectWeather], weather =>\n  weather.daily ? weather.daily.data : null\n)\n\nexport const selectHourlyWeather = createSelector([selectWeather], weather =>\n  weather.hourly ? weather.hourly.data : null\n)\n\nexport const selectTimezone = createSelector(\n  [selectWeather],\n  weather => weather.timezone\n)\n\nexport const selectCurrentSliderTime = createSelector(\n  [selectWeather],\n  weather => weather.currentSliderTime\n)\n\nexport const selectLowerBoundForSlider = createSelector(\n  [selectCurrentWeather, selectDailyWeather],\n  (currentWeather, dailyWeather) =>\n    currentWeather\n      ? (currentWeather.time - dailyWeather[0].time) /\n        (dailyWeather[2].time - dailyWeather[0].time)\n      : 0\n)\n\nexport const selectCurrentWeatherIcon = createSelector(\n  [selectCurrentWeather],\n  currentWeather => (currentWeather ? currentWeather.icon : 'clear-day')\n)\n\nexport const selectCurrentWeatherBak = createSelector(\n  [selectWeather],\n  weather => weather.currentlyBak\n)\n","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter, useLocation } from 'react-router-dom'\nimport { createStructuredSelector } from 'reselect'\n\nimport { SearchFieldForm, SearchInput } from './search-field.styles'\n\nimport { getWeatherStart } from '../../redux/weather/weather.actions'\nimport { selectPlaceName } from '../../redux/weather/weather.selectors'\n\nconst SearchField = ({\n  searchValue = '',\n  placeName,\n  getWeatherStart,\n  history,\n  match: { url = '/' }\n}) => {\n  const [search, setSearch] = useState(searchValue)\n  const queryParams = new URLSearchParams(useLocation().search)\n\n  // update search input value to placeName\n  useEffect(() => {\n    if (placeName) setSearch(placeName.split(',')[0])\n  }, [placeName])\n\n  // get weather on query parameter change\n  useEffect(() => {\n    const searchParam = queryParams.get('s')\n    if (searchParam) {\n      getWeatherStart(searchParam)\n    } else {\n      history.push('/')\n    }\n  }, [queryParams])\n\n  const handleSubmit = event => {\n    event.preventDefault()\n    history.push(`${url}?s=${search}`)\n  }\n\n  const handleChange = event => {\n    setSearch(event.target.value)\n  }\n\n  return (\n    <SearchFieldForm onSubmit={handleSubmit}>\n      <SearchInput\n        type=\"text\"\n        name=\"query\"\n        placeholder=\"Search\"\n        value={search}\n        onChange={handleChange}\n      />\n    </SearchFieldForm>\n  )\n}\n\nconst mapStateToProps = createStructuredSelector({\n  placeName: selectPlaceName\n})\n\nconst mapDispatchToProps = dispatch => ({\n  getWeatherStart: search => dispatch(getWeatherStart(search))\n})\n\nexport default withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(SearchField)\n)\n","import styled from 'styled-components'\n\nexport const SwitchUnitsContainer = styled.div`\n  font-family: 'Montserrat', 'sans-serif';\n  color: ${({ theme }) => theme.text};\n  font-size: ${({ fontSize }) => fontSize}px;\n  span {\n    margin: 0px 5px;\n    cursor: pointer;\n\n    :first-child {\n      font-weight: ${({ units }) => (units === 'si' ? 600 : 300)};\n    }\n\n    :last-child {\n      font-weight: ${({ units }) => (units === 'us' ? 600 : 300)};\n    }\n  }\n`\n","import React from 'react'\nimport { createStructuredSelector } from 'reselect'\nimport { connect } from 'react-redux'\n\nimport { SwitchUnitsContainer } from './switch-units.styles'\nimport { setWeatherUnits } from '../../redux/weather/weather.actions'\nimport { selectUnits } from '../../redux/weather/weather.selectors'\n\nconst SwitchUnits = ({ setWeatherUnits, units, fontSize = 20 }) => {\n  return (\n    <SwitchUnitsContainer units={units} fontSize={fontSize}>\n      <span onClick={() => setWeatherUnits('si')}>ºC</span>/\n      <span onClick={() => setWeatherUnits('us')}>ºF</span>\n    </SwitchUnitsContainer>\n  )\n}\n\nconst mapStateToProps = createStructuredSelector({ units: selectUnits })\n\nconst mapDispatchToProps = dispatch => ({\n  setWeatherUnits: units => dispatch(setWeatherUnits(units))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SwitchUnits)\n","import styled from 'styled-components'\n\nexport const HeaderContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  display: grid;\n  grid-template-rows: repeat(5, 1fr);\n  grid-template-columns: 140px repeat(2, minmax(200px, auto)) 140px;\n`\n\nexport const IconContainer = styled.div`\n  grid-column: 1 / span 1;\n  grid-row: 1 / span 2;\n  display: flex;\n  justify-content: flex-end;\n  align-items: flex-end;\n`\nexport const SearchFieldContainer = styled.div`\n  grid-column: 2 / span 2;\n  grid-row: 2 / span 3;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 10px 20px;\n`\n\nexport const TempSwitchContainer = styled.div`\n  grid-column: 4 / span 1;\n  grid-row: 1 / span 2;\n  display: flex;\n  justify-content: flex-start;\n  align-items: flex-end;\n`\n","import React from 'react'\n\nimport SideMenuIcon from '../side-menu-icon/side-menu-icon.component'\nimport SearchField from '../search-field/search-field.component'\nimport SwitchUnits from '../switch-units/switch-units.component'\n\nimport {\n  HeaderContainer,\n  IconContainer,\n  SearchFieldContainer,\n  TempSwitchContainer\n} from './header.styles'\n\nconst Header = () => {\n  return (\n    <HeaderContainer>\n      <IconContainer>{/* <SideMenuIcon size={30} /> */}</IconContainer>\n\n      <SearchFieldContainer>\n        <SearchField />\n      </SearchFieldContainer>\n\n      <TempSwitchContainer>\n        <SwitchUnits fontSize={18} />\n      </TempSwitchContainer>\n    </HeaderContainer>\n  )\n}\n\nexport default Header\n","import styled from 'styled-components'\n\nexport const ArcRangeSliderContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: flex-end;\n  position: relative;\n\n  /* for old ArcSVG */\n  svg {\n    /* position: absolute; */\n\n    &#range-arc {\n      position: absolute;\n      flex: 1 0;\n    }\n\n    &#main-arc {\n      flex: 1 0;\n      fill: ${({ theme }) => theme.arch};\n    }\n  }\n`\n\nexport const ArcBackgroundContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: flex-end;\n`\n\nexport const ArcSVGContainer = styled.div`\n  position: absolute;\n  width: 100%;\n  display: flex;\n  background-color: ${({ theme }) => theme.arch};\n  svg {\n    flex: 1 0;\n  }\n`\n\nexport const ArcBackgroundOverlay = styled.div`\n  width: 100%;\n  height: 100%;\n  /* 1px line fix on certian resolution idk why  */\n  margin-top: -1px;\n  position: absolute;\n  background-color: ${({ theme }) => theme.base};\n  clip-path: url(#curveClipPath);\n`\n","import { format, addHours, fromUnixTime } from 'date-fns'\nimport { utcToZonedTime } from 'date-fns-tz'\n\nexport const formatTime = (\n  time,\n  { timezone = 'Asia/Kolkata', hours = 0, formatString = 'hh:mm b' } = {}\n) =>\n  format(\n    utcToZonedTime(addHours(fromUnixTime(time), hours), timezone),\n    formatString\n  ).toUpperCase()\n\nexport const roundAndFix = (n, d) => {\n  const m = Math.pow(10, d)\n  return Math.round(n * m) / m\n}\n","import styled from 'styled-components'\n\nexport const WeatherIconContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  color: ${({ theme }) => theme.text};\n  font-family: 'Montserrat', 'sans-serif';\n  position: relative;\n  span {\n    position: absolute;\n    right: -20px;\n    top: -20px;\n    font-size: 0.9rem;\n    font-weight: 300;\n  }\n`\n\nexport const WeatherIconImage = styled.img`\n  width: 100%;\n  height: 100%;\n`\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { formatTime } from '../../redux/utils'\n\nimport {\n  selectCurrentSliderTime,\n  selectTimezone,\n  selectCurrentWeatherIcon\n} from '../../redux/weather/weather.selectors'\n\nimport clearDay from '../../assets/weather-icons/clear-day.svg'\nimport clearNight from '../../assets/weather-icons/clear-night.svg'\nimport cloudy from '../../assets/weather-icons/cloudy.svg'\nimport fog from '../../assets/weather-icons/fog.svg'\nimport partlyCloudyDay from '../../assets/weather-icons/partly-cloudy-day.svg'\nimport partlyCloudyNight from '../../assets/weather-icons/partly-cloudy-night.svg'\nimport rain from '../../assets/weather-icons/rain.svg'\nimport sleet from '../../assets/weather-icons/sleet.svg'\nimport snow from '../../assets/weather-icons/snow.svg'\nimport wind from '../../assets/weather-icons/wind.svg'\n\nimport { WeatherIconContainer, WeatherIconImage } from './weather-icon.styles'\n\nconst WeatherIcon = ({\n  iconName,\n  showCurrentSliderTime,\n  currentSliderTime,\n  timezone,\n  currentIcon,\n  ...props\n}) => {\n  const ICON_MAP = {\n    'clear-day': clearDay,\n    'clear-night': clearNight,\n    rain,\n    sleet,\n    wind,\n    fog,\n    snow,\n    cloudy,\n    'partly-cloudy-day': partlyCloudyDay,\n    'partly-cloudy-night': partlyCloudyNight\n  }\n\n  return (\n    <WeatherIconContainer {...props}>\n      {showCurrentSliderTime ? (\n        <span>\n          {formatTime(currentSliderTime, { timezone, formatString: 'hh:mm b' })}\n        </span>\n      ) : (\n        ''\n      )}\n      <WeatherIconImage\n        src={ICON_MAP[iconName] || ICON_MAP[currentIcon]}\n        alt=\"weather-icon\"\n      />\n    </WeatherIconContainer>\n  )\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentSliderTime: selectCurrentSliderTime,\n  timezone: selectTimezone,\n  currentIcon: selectCurrentWeatherIcon\n})\n\nexport default connect(mapStateToProps)(WeatherIcon)\n","import React from 'react'\nimport {\n  ArcBackgroundContainer,\n  ArcSVGContainer,\n  ArcBackgroundOverlay\n} from './arc-range-slider.styles'\n\nconst ArcBackground = () => {\n  return (\n    <>\n      <svg width=\"0\" height=\"0\">\n        <defs>\n          <clipPath id=\"curveClipPath\" clipPathUnits=\"objectBoundingBox\">\n            <path\n              d=\"M 0,1\n              L 0,0\n              L 1,0\n              L 1,1\n              C .705 -0.315, 0.295 -0.315, 0 1\n              Z\"\n            />\n          </clipPath>\n        </defs>\n      </svg>\n\n      <ArcBackgroundContainer>\n        <ArcSVGContainer>\n          <svg\n            id=\"main-arc\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            viewBox=\"0 0 414.5 30\"\n          >\n            <path d=\"M414 30C354 11 283 0 207 0S61 11 0 30z\" fill=\"none\" />\n          </svg>\n          <ArcBackgroundOverlay />\n        </ArcSVGContainer>\n      </ArcBackgroundContainer>\n    </>\n  )\n}\n\nexport default ArcBackground\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport Draggable from 'gsap/Draggable'\nimport MotionPathPlugin from 'gsap/MotionPathPlugin'\nimport { gsap, TweenMax, TimelineMax, Linear } from 'gsap'\n\nimport { ArcRangeSliderContainer } from './arc-range-slider.styles'\nimport WeatherIcon from '../weather-icon/weather-icon.component'\nimport ArcBackground from './arc-background.component'\n\nimport {\n  selectTimezone,\n  selectLowerBoundForSlider\n} from '../../redux/weather/weather.selectors'\n\nimport { updateWeatherRangeProgress } from '../../redux/weather/weather.actions'\n\nclass ArcRange extends React.Component {\n  state = {\n    progress: 0\n  }\n\n  windowScrollListener = null\n  windowResizeListener = null\n\n  timeline = null\n  draggable = null\n\n  initRange = lowerBound => {\n    const newLowerBound = lowerBound || 0\n\n    const { updateWeatherRangeProgress } = this.props\n    const bounds = { minX: 41.55 + newLowerBound * 331.5, maxX: 373.45 }\n    const seekTo = bounds.minX / 415.5\n\n    const weatherIcon = document.getElementById('range-weather-icon')\n    weatherIcon.style.position = 'fixed'\n    weatherIcon.style.pointerEvents = 'none'\n\n    TweenMax.set('svg', { overflow: 'visible' })\n\n    gsap.registerPlugin(Draggable)\n    gsap.registerPlugin(MotionPathPlugin)\n\n    var tl = new TimelineMax({ paused: true })\n      .from('#range-path', 1, { ease: Linear.easeNone })\n      .to(\n        '#range-knob',\n        1,\n        {\n          motionPath: {\n            type: 'quadratic',\n            path: '#range-path'\n          },\n          ease: Linear.easeNone\n        },\n        0\n      )\n      .seek(seekTo)\n\n    var draggable = Draggable.create('#range-knob', {\n      trigger: '#range-knob',\n      type: 'x',\n      throwProps: true,\n      bounds,\n      onDrag: Update,\n      onThrowUpdate: Update\n    })\n\n    function Update() {\n      const progress = Math.abs(this.x / 415.5)\n      tl.progress(progress)\n      updateWeatherIconPosition(progress)\n\n      const scale = 415.5 - bounds.minX - (415.5 - bounds.maxX)\n\n      updateWeatherRangeProgress(\n        Math.round(((this.x - this.minX) / scale + Number.EPSILON) * 100) / 100\n      )\n    }\n\n    function updateWeatherIconPosition() {\n      const knob = document.getElementById('range-knob').getBoundingClientRect()\n      weatherIcon.style.left = `${knob.x}px`\n      weatherIcon.style.top = `${knob.y}px`\n    }\n\n    return { tl, draggable }\n  }\n\n  componentDidMount() {\n    const { lowerBound } = this.props\n    const { tl, draggable } = this.initRange(lowerBound)\n    this.timeline = tl\n    this.draggable = draggable\n\n    this.windowResizeListener = window.addEventListener(\n      'resize',\n      this.updateWeatherIconSize\n    )\n    this.windowScrollListener = window.addEventListener(\n      'scroll',\n      this.updateWeatherIconPosition\n    )\n\n    this.updateWeatherIconSize()\n  }\n\n  componentDidUpdate() {\n    const { lowerBound } = this.props\n    const minX = 41.55 + lowerBound * 331.5\n    const seekTo = minX / 415.5\n    this.draggable[0].applyBounds({ minX, maxX: 373.45 })\n    if (this.timeline) this.timeline.seek(seekTo)\n    this.updateWeatherIconPosition()\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.windowResizeListener)\n    window.removeEventListener('scroll', this.windowScrollListener)\n  }\n\n  updateWeatherIconSize = () => {\n    this.updateWeatherIconPosition()\n    const knob = document.getElementById('range-knob').getBoundingClientRect()\n    const weatherIcon = document.getElementById('range-weather-icon')\n    weatherIcon.style.width = `${knob.width}px`\n    weatherIcon.style.height = `${knob.height}px`\n  }\n\n  updateWeatherIconPosition = progress => {\n    const knob = document.getElementById('range-knob').getBoundingClientRect()\n    const weatherIcon = document.getElementById('range-weather-icon')\n    weatherIcon.style.left = `${knob.x}px`\n    weatherIcon.style.top = `${knob.y}px`\n  }\n\n  render() {\n    return (\n      <>\n        <svg\n          id=\"range-arc\"\n          viewBox=\"0 0 414.5 30\"\n          version=\"1.1\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path id=\"range-path\" d=\"M0 31a727 727 0 01414 0\" fill=\"none\" />\n\n          {/* update radius of knob to update size of icon as it dependent on it  */}\n          <circle id=\"range-knob\" r=\"25\" fill=\"transparent\" />\n        </svg>\n\n        <WeatherIcon id=\"range-weather-icon\" showCurrentSliderTime />\n      </>\n    )\n  }\n}\n\nconst ArcSVG = () => {\n  return (\n    <svg\n      id=\"main-arc\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"0 0 414.5 30\"\n    >\n      <path d=\"M414 30C354 11 283 0 207 0S61 11 0 30z\" />\n    </svg>\n  )\n}\n\nconst ArcRangeSlider = () => {\n  return (\n    <ArcRangeSliderContainer>\n      {/* <ArcSVG /> */}\n      <ArcBackground />\n      <ConnectedArcRange />\n    </ArcRangeSliderContainer>\n  )\n}\n\nconst mapStateToProps = createStructuredSelector({\n  timezone: selectTimezone,\n  lowerBound: selectLowerBoundForSlider\n})\n\nconst mapDispatchToProps = dispatch => ({\n  updateWeatherRangeProgress: progress =>\n    dispatch(updateWeatherRangeProgress(progress))\n})\n\nconst ConnectedArcRange = connect(mapStateToProps, mapDispatchToProps)(ArcRange)\n\nexport default ArcRangeSlider\n","import styled, { css } from 'styled-components'\n\nconst flexCenter = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst timeStyles = css`\n  color: ${({ theme }) => theme.text};\n  align-self: flex-start;\n  font-size: 0.9rem;\n  font-weight: 400;\n  padding: 20px;\n`\n\nexport const BriefDetailsContainer = styled.div`\n  color: ${({ theme }) => theme.text};\n  font-family: 'Montserrat', 'sans-serif';\n  font-weight: 200;\n  display: grid;\n  grid-template-columns: auto 400px auto;\n  text-align: center;\n  height: 100%;\n  p {\n    margin-left: 10px;\n  }\n`\n\nexport const MinTempContainer = styled.div`\n  font-size: 2.4rem;\n  text-align: center;\n  ${flexCenter}\n  justify-content: flex-end;\n  box-sizing: border-box;\n  padding-right: 30px;\n  margin-top: 40px;\n\n  span {\n    ${timeStyles}\n    margin-right: auto;\n  }\n`\n\nexport const TempContainer = styled.div`\n  font-size: 8.2rem;\n  text-align: center;\n  ${flexCenter}\n  padding-left: 40px;\n  box-sizing: border-box;\n`\n\nexport const MaxTempContainer = styled.div`\n  font-size: 2.4rem;\n  ${flexCenter}\n  justify-content: flex-start;\n  box-sizing: border-box;\n  padding-left: 30px;\n  margin-top: 40px;\n\n  span {\n    ${timeStyles}\n    justify-self: flex-end;\n    margin-left: auto;\n  }\n`\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\nimport { useTheme } from 'styled-components'\nimport { formatTime, roundAndFix } from '../../redux/utils'\n\nimport {\n  selectCurrentWeather,\n  selectDailyWeather,\n  selectTimezone\n} from '../../redux/weather/weather.selectors'\n\nimport {\n  BriefDetailsContainer,\n  MinTempContainer,\n  TempContainer,\n  MaxTempContainer\n} from './brief-details.styles'\n\nconst DownSVG = ({ theme }) => {\n  return (\n    <svg\n      style={{ fill: theme.text, opacity: 0.8 }}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n    >\n      <path d=\"M0 7l3-2 9 9 9-9 3 2-12 13z\" />\n    </svg>\n  )\n}\n\nconst UpSVG = ({ theme }) => {\n  return (\n    <svg\n      style={{ fill: theme.text, opacity: 0.8 }}\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"24\"\n      height=\"24\"\n    >\n      <path d=\"M0 17l3 3 9-10 9 10 3-3L12 5z\" />\n    </svg>\n  )\n}\n\nconst BriefDetails = ({ dailyWeather, currentWeather, timezone }) => {\n  const theme = useTheme()\n\n  return dailyWeather ? (\n    <BriefDetailsContainer>\n      <MinTempContainer>\n        <span>\n          {formatTime(dailyWeather[0].time, { timezone, formatString: 'E eo' })}\n        </span>\n        <DownSVG theme={theme} />\n        <p>{roundAndFix(dailyWeather[0].temperatureMin, 1)}º</p>\n      </MinTempContainer>\n      <TempContainer>\n        <p>{roundAndFix(currentWeather.temperature, 1)}º</p>\n      </TempContainer>\n      <MaxTempContainer>\n        <UpSVG theme={theme} />\n        <p>{roundAndFix(dailyWeather[0].temperatureMax, 1)}º</p>\n        <span>\n          {formatTime(dailyWeather[2].time, { timezone, formatString: 'E eo' })}\n        </span>\n      </MaxTempContainer>\n    </BriefDetailsContainer>\n  ) : (\n    ''\n  )\n}\n\nconst mapStateToProps = createStructuredSelector({\n  dailyWeather: selectDailyWeather,\n  currentWeather: selectCurrentWeather,\n  timezone: selectTimezone\n})\n\nexport default connect(mapStateToProps)(BriefDetails)\n","import styled from 'styled-components'\n\nimport Slider from '@farbenmeer/react-spring-slider'\n\nexport const SliderContainer = styled.div`\n  height: 100%;\n  max-width: 900px;\n  margin: auto;\n  position: relative;\n`\n\nexport const CustomSlider = styled(Slider)``\n\nexport const SliderOverlay = styled.div`\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  top: 0;\n  left: 0;\n  /* box-shadow: inset 0px 0px 20px 20px ${({ theme }) =>\n    theme.bottomDetail}; */\n  cursor: pointer;\n`\n","import styled from 'styled-components'\n\nexport const WeatherSummaryContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const SummaryContainer = styled.p`\n  font-family: 'Montserrat', 'sans-serif';\n  font-size: 1.6rem;\n  font-weight: 300;\n  color: ${({ theme }) => theme.text};\n`\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { selectCurrentSummary } from '../../redux/weather/weather.selectors'\n\nimport {\n  WeatherSummaryContainer,\n  SummaryContainer\n} from './weather-summary.styles'\n\nconst WeatherSummary = ({ summary }) => {\n  return (\n    <WeatherSummaryContainer>\n      <SummaryContainer>{summary}</SummaryContainer>\n    </WeatherSummaryContainer>\n  )\n}\n\nconst mapStateToProps = createStructuredSelector({\n  summary: selectCurrentSummary\n})\n\nexport default connect(mapStateToProps)(WeatherSummary)\n","import styled, { css } from 'styled-components'\n\nconst flexCenter = css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nexport const WeatherInfoCardContainer = styled.div`\n  place-self: center;\n  height: 150px;\n  color: ${({ theme }) => theme.text};\n  font-family: 'Montserrat', 'sans-serif';\n  font-weight: 300;\n  display: grid;\n  grid-template-rows: 1fr 2fr 1fr;\n  text-align: center;\n`\n\nexport const WeatherDayText = styled.span`\n  width: 100%;\n  font-size: 16px;\n`\n\nexport const WeatherIconContainer = styled.div`\n  ${flexCenter}\n  img {\n    width: 60px;\n    height: 60px;\n  }\n`\n\nexport const WeatherTempText = styled.span`\n  width: 100%;\n  font-size: 14px;\n`\n","import React from 'react'\nimport { formatTime, roundAndFix } from '../../redux/utils'\n\nimport WeatherIcon from '../weather-icon/weather-icon.component'\n\nimport {\n  WeatherInfoCardContainer,\n  WeatherDayText,\n  WeatherTempText,\n  WeatherIconContainer\n} from './weather-info-card.styles'\n\nconst WeatherInfoCard = props => {\n  const { temperatureHigh, temperatureLow, time, icon } = props\n  const avgTemp = (temperatureHigh + temperatureLow) / 2\n  const day = formatTime(time, { formatString: 'E' })\n  return (\n    <WeatherInfoCardContainer>\n      <WeatherDayText>{day.toLowerCase()}</WeatherDayText>\n\n      <WeatherIconContainer>\n        <WeatherIcon iconName={icon} />\n      </WeatherIconContainer>\n\n      <WeatherTempText>{roundAndFix(avgTemp, 1)}º</WeatherTempText>\n    </WeatherInfoCardContainer>\n  )\n}\n\nexport default WeatherInfoCard\n","import styled from 'styled-components'\n\nexport const WeatherCardsListContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  box-sizing: border-box;\n  padding: 20px;\n`\n\nexport const WeatherCardsContainer = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(70px, 1fr));\n  grid-column-gap: 20px;\n  width: 100%;\n`\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport WeatherInfoCard from '../weather-info-card/weather-info-card.component'\n\nimport { selectDailyWeather } from '../../redux/weather/weather.selectors'\n\nimport {\n  WeatherCardsListContainer,\n  WeatherCardsContainer\n} from './weather-cards-list.styles'\n\nconst WeatherCardsList = ({ dailyWeather }) => {\n  return (\n    <WeatherCardsListContainer>\n      <WeatherCardsContainer>\n        {dailyWeather\n          ? dailyWeather\n              .slice(0, 7)\n              .map((weather, index) => (\n                <WeatherInfoCard key={index} {...weather} />\n              ))\n          : ''}\n      </WeatherCardsContainer>\n    </WeatherCardsListContainer>\n  )\n}\n\nconst mapStateToProps = createStructuredSelector({\n  dailyWeather: selectDailyWeather\n})\n\nexport default connect(mapStateToProps)(WeatherCardsList)\n","import styled from 'styled-components'\n\nexport const DetailedInfoContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(2, 1fr);\n  padding: 20px;\n  box-sizing: border-box;\n`\n","import styled from 'styled-components'\n\nexport const DetailedInfoCardContainer = styled.div`\n  height: 100%;\n  width: 150px;\n  justify-self: center;\n  margin-right: 5%;\n  display: grid;\n  grid-template-rows: 60% 40%;\n  text-align: center;\n  font-family: 'Montserrat', 'sans-serif';\n  color: ${({ theme }) => theme.text};\n`\n\nexport const DetailedInfoCardTitle = styled.div`\n  margin: auto;\n  font-size: 22px;\n`\n\nexport const DetailedInfoCardSubTitle = styled.div`\n  margin-bottom: auto;\n  opacity: 0.8;\n`\n","import React from 'react'\n\nimport {\n  DetailedInfoCardContainer,\n  DetailedInfoCardTitle,\n  DetailedInfoCardSubTitle\n} from './detailed-info-card.styles'\n\nconst DetailedInfoCard = ({ title, subtitle }) => {\n  return (\n    <DetailedInfoCardContainer>\n      <DetailedInfoCardTitle>{title}</DetailedInfoCardTitle>\n      <DetailedInfoCardSubTitle>{subtitle}</DetailedInfoCardSubTitle>\n    </DetailedInfoCardContainer>\n  )\n}\n\nexport default DetailedInfoCard\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { createStructuredSelector } from 'reselect'\n\nimport { DetailedInfoContainer } from './detailed-info.styles'\n\nimport DetailedInfoCard from '../detailed-info-card/detailed-info-card.component'\n\nimport {\n  selectCurrentWeather,\n  selectUnits\n} from '../../redux/weather/weather.selectors'\n\nconst DetailedInfo = ({\n  units,\n  currentWeather = {\n    precipProbability: '',\n    windSpeed: '',\n    humidity: '',\n    visibility: '',\n    uvIndex: '',\n    pressure: ''\n  }\n}) => {\n  const {\n    precipProbability,\n    windSpeed,\n    humidity,\n    visibility,\n    uvIndex,\n    pressure\n  } = currentWeather\n\n  return currentWeather ? (\n    <DetailedInfoContainer>\n      <DetailedInfoCard\n        title={`${Number.parseFloat(precipProbability * 100).toFixed(1)}%`}\n        subtitle=\"Chance of rain\"\n      />\n      <DetailedInfoCard\n        title={`${windSpeed} ${units === 'si' ? 'mps' : 'mph'}`}\n        subtitle=\"Wind\"\n      />\n      <DetailedInfoCard\n        title={`${Number.parseFloat(humidity * 100).toFixed(1)}%`}\n        subtitle=\"Humidity\"\n      />\n      <DetailedInfoCard\n        title={`${Number.parseFloat(visibility).toFixed(2)} ${\n          units === 'si' ? 'km' : visibility > 1 ? 'miles' : 'mile'\n        }`}\n        subtitle=\"Visibility\"\n      />\n      <DetailedInfoCard title={uvIndex} subtitle=\"UV Index\" />\n      <DetailedInfoCard\n        title={`${pressure} ${units === 'si' ? 'hPa' : 'mb'}`}\n        subtitle=\"Pressure\"\n      />\n    </DetailedInfoContainer>\n  ) : (\n    ''\n  )\n}\n\nconst mapStateToProps = createStructuredSelector({\n  currentWeather: selectCurrentWeather,\n  units: selectUnits\n})\n\nexport default connect(mapStateToProps)(DetailedInfo)\n","import React, { useState } from 'react'\n\nimport {\n  CustomSlider,\n  SliderOverlay,\n  SliderContainer\n} from './details-slider.styles'\n\nimport WeatherSummary from '../../components/weather-summary/weather-summary.component'\nimport WeatherCardsList from '../../components/weather-cards-list/weather-cards-list.component'\nimport DetailedInfo from '../../components/detailed-info/detailed-info.component'\n\nconst DetailsSlider = () => {\n  const [activeIndex, setActiveIndex] = useState(1)\n\n  let staticActiveIndex = 1\n\n  const handleNext = () => {\n    setActiveIndex(staticActiveIndex > 2 ? 0 : staticActiveIndex + 1)\n    console.log(staticActiveIndex)\n  }\n\n  return (\n    <SliderContainer>\n      <CustomSlider\n        activeIndex={activeIndex}\n        onSlideChange={index => (staticActiveIndex = index)}\n        auto={6000}\n      >\n        <WeatherSummary />\n        <WeatherCardsList />\n        <DetailedInfo />\n      </CustomSlider>\n\n      <SliderOverlay onClick={handleNext} />\n    </SliderContainer>\n  )\n}\n\nexport default DetailsSlider\n","import styled from 'styled-components'\n\nexport const WeatherPageContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: ${({ theme }) => theme.base};\n  display: grid;\n  grid-template-rows: minmax(150px, 25%) minmax(100px, 15%) minmax(200px, 35%) minmax(\n      150px,\n      25%\n    );\n`\n\nexport const TopContainer = styled.div`\n  background-color: transparent;\n`\n\nexport const ArchContainer = styled.div`\n  z-index: 1;\n`\n\nexport const BriefDetailsContainer = styled.div`\n  background-color: ${({ theme }) => theme.arch};\n`\n\nexport const BottomContainer = styled.div`\n  background-color: ${({ theme }) => theme.bottomDetail};\n`\n","import React from 'react'\nimport { connect } from 'react-redux'\n\nimport Header from '../../components/header/header.component'\nimport ArcRangeSlider from '../../components/arc-range-slider/arc-range-slider.component'\nimport BriefDetails from '../../components/brief-details/brief-details.component'\nimport DetailsSlider from '../../components/details-slider/details-slider.component'\n\nimport {\n  WeatherPageContainer,\n  TopContainer,\n  BriefDetailsContainer,\n  BottomContainer,\n  ArchContainer\n} from './weather.styles'\n\nimport { getWeatherStart } from '../../redux/weather/weather.actions'\n\nclass WeatherPage extends React.Component {\n  componentDidMount() {\n    const { history, getWeatherStart } = this.props\n    const query = this.getQueryParams()\n\n    if (query) {\n      const search = query.get('s')\n      if (search) {\n        getWeatherStart(search)\n      } else {\n        history.push('/')\n      }\n    }\n  }\n\n  getQueryParams() {\n    const { location } = this.props\n    if (location && location.search) {\n      return new URLSearchParams(location.search)\n    } else return null\n  }\n\n  render() {\n    return (\n      <WeatherPageContainer>\n        <TopContainer>\n          <Header />\n        </TopContainer>\n        <ArchContainer>\n          <ArcRangeSlider />\n        </ArchContainer>\n        <BriefDetailsContainer>\n          <BriefDetails />\n        </BriefDetailsContainer>\n        <BottomContainer>\n          <DetailsSlider />\n        </BottomContainer>\n      </WeatherPageContainer>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getWeatherStart: query => dispatch(getWeatherStart(query))\n})\n\nexport default connect(null, mapDispatchToProps)(WeatherPage)\n","import styled from 'styled-components'\n\nexport const HomePageContainer = styled.div``\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { HomePageContainer } from './home.styles'\n\nclass HomePage extends React.Component {\n  render() {\n    return (\n      <HomePageContainer>\n        <Redirect to=\"/weather?s=Chandigarh\" />\n      </HomePageContainer>\n    )\n  }\n}\n\nexport default HomePage\n","import React from 'react'\nimport { createStructuredSelector } from 'reselect'\nimport { connect } from 'react-redux'\nimport './App.scss'\n\nimport { Route, Switch } from 'react-router-dom'\n\nimport WeatherPage from './pages/weather/weather.component'\nimport HomePage from './pages/home/home.component'\n\nimport { getWeatherStart } from './redux/weather/weather.actions'\nimport { selectLastSearch } from './redux/weather/weather.selectors'\n\nclass App extends React.Component {\n  componentDidMount() {\n    const { lastSearch, getWeatherStart } = this.props\n    // if (lastSearch) getWeatherStart(lastSearch)\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/weather\" component={WeatherPage} />\n          <Route path=\"*\" component={HomePage} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = createStructuredSelector({\n  lastSearch: selectLastSearch\n})\n\nconst mapDispatchToProps = dispatch => ({\n  getWeatherStart: query => dispatch(getWeatherStart(query))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import WeatherActionTypes from './weather.types'\n\nconst INITIAL_STATE = {\n  longitute: undefined,\n  latitude: undefined,\n  placeName: undefined,\n  forecast: undefined,\n  timezone: undefined,\n  currently: undefined,\n  hourly: undefined,\n  daily: undefined,\n  flags: { units: 'si' },\n  offset: undefined,\n  search: undefined,\n  error: undefined,\n  currentSliderTime: 0\n}\n\nconst weatherReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case WeatherActionTypes.GET_WEATHER_SUCCESS:\n      console.log(state)\n      return {\n        ...state,\n        ...action.payload,\n        currentSliderTime: action.payload.currently.time,\n        // creating this so state can be restored to current weather when slider comes back to start\n        currentlyBak: action.payload.currently,\n        error: undefined\n      }\n    case WeatherActionTypes.GET_WEATHER_FAILURE:\n      return {\n        ...state,\n        error: action.payload\n      }\n    case WeatherActionTypes.SET_WEATHER_UNITS:\n      return {\n        ...state,\n        flags: { units: action.payload }\n      }\n    case WeatherActionTypes.SET_CURRENT_SLIDER_TIME:\n      return {\n        ...state,\n        currentSliderTime: action.payload\n      }\n    case WeatherActionTypes.SET_CURRENT_WEATHER:\n      return {\n        ...state,\n        currently: {\n          ...state.currently,\n          ...action.payload\n        }\n      }\n    default:\n      return state\n  }\n}\n\nexport default weatherReducer\n","//-----THEMES-----//\n\nconst darkText = '#665858'\nconst lightText = '#D5D5D5'\n\n//--CLEAR DAY--//\nexport const clearDay = {\n  base: '#72FFE2',\n  arch: '#88EEF7',\n  bottomDetail: '#86E8F1',\n  text: darkText\n}\n\n//--CLEAR NIGHT--//\nexport const clearNight = {\n  base: '#6C8A84',\n  arch: '#6E6E6E',\n  bottomDetail: '#5D5E5E',\n  text: lightText\n}\n\n//--RAIN--//\nexport const rain = {\n  base: '#619BBE',\n  arch: '#53789E',\n  bottomDetail: '#395877',\n  text: lightText\n}\n\n//--SLEET--//\nexport const sleet = {\n  base: '#619BBE',\n  arch: '#53789E',\n  bottomDetail: '#395877',\n  text: lightText\n}\n\n//--WIND--//\nexport const wind = {\n  base: '#7EA1B2',\n  arch: '#62698B',\n  bottomDetail: '#207E8B',\n  text: lightText\n}\n\n//--FOG--//\nexport const fog = {\n  base: '#F4F7F0',\n  arch: '#F2EEE3',\n  bottomDetail: '#C9D7D8',\n  text: darkText\n}\n\n//--SNOW--//\nexport const snow = {\n  base: '#FFFFFF',\n  arch: '#C6EFFF',\n  bottomDetail: '#D1E3FF',\n  text: darkText\n}\n\n//--CLOUDY--//\nexport const cloudy = {\n  base: '#7EA1B2',\n  arch: '#62698B',\n  bottomDetail: '#207E8B',\n  text: lightText\n}\n\n//--PARTLY CLOUDY DAY--//\nexport const partlyCloudyDay = {\n  base: '#C6EEFF',\n  arch: '#A6DFFF',\n  bottomDetail: '#91D7FF',\n  text: darkText\n}\n\n//--PARTLY CLOUDY NIGHT--//\nexport const partlyCloudyNight = {\n  base: '#747484',\n  arch: '#3C3C4C',\n  bottomDetail: '#181834',\n  text: lightText\n}\n\n//--DEFAULT EXPORT--//\nexport default {\n  'clear-day': clearDay,\n  'clear-night': clearNight,\n  rain,\n  sleet,\n  wind,\n  fog,\n  snow,\n  cloudy,\n  'partly-cloudy-day': partlyCloudyDay,\n  'partly-cloudy-night': partlyCloudyNight\n}\n","const ThemeActionTypes = {\n  SET_CURRENT_THEME: 'SET_CURRENT_THEME'\n}\n\nexport default ThemeActionTypes\n","import themes from './themes.data'\n\nimport ThemeActionTypes from './theme.types'\n\nconst INITIAL_STATE = {\n  currentTheme: themes['clear-day']\n}\n\nconst themeReducer = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n    case ThemeActionTypes.SET_CURRENT_THEME:\n      return {\n        ...state,\n        currentTheme: themes[action.payload] || themes['clear-day']\n      }\n    default:\n      return state\n  }\n}\n\nexport default themeReducer\n","import { combineReducers } from 'redux'\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nimport weatherReducer from './weather/weather.reducer'\nimport themeReducer from './theme/theme.reducer'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['weather', 'theme']\n}\n\nconst rootReducer = combineReducers({\n  weather: weatherReducer,\n  theme: themeReducer\n})\n\nexport default persistReducer(persistConfig, rootReducer)\n","import ThemeActionTypes from './theme.types'\n\nexport const setCurrentTheme = theme => ({\n  type: ThemeActionTypes.SET_CURRENT_THEME,\n  payload: theme\n})\n","import {\n  takeLatest,\n  put,\n  call,\n  all,\n  select,\n  throttle\n} from 'redux-saga/effects'\n\nimport WeatherActionTypes from './weather.types'\nimport {\n  getWeatherSuccess,\n  getWeatherFailure,\n  getWeatherStart,\n  setCurrentSliderTime,\n  setCurrentWeather\n} from './weather.actions'\n\nimport {\n  selectUnits,\n  selectLastSearch,\n  selectCurrentWeather,\n  selectCurrentWeatherBak,\n  selectDailyWeather,\n  selectHourlyWeather\n} from './weather.selectors'\n\nimport { setCurrentTheme } from '../theme/theme.actions'\n\nconst findClosestHourlyWeather = (time, hourlyWeather) => {\n  const closest = hourlyWeather.reduce((a, b) => {\n    return Math.abs(b.time - time) < Math.abs(a.time - time) ? b : a\n  })\n\n  return closest\n}\n\nfunction* getWeather({ payload }) {\n  const BASE_URL = `https://tru-weather-api.herokuapp.com`\n  const units = yield select(selectUnits)\n  try {\n    const res = yield fetch(\n      `${BASE_URL}/weather?search=${payload}&units=${units}`\n    )\n    const data = yield res.json()\n\n    if (data.error) {\n      yield put(getWeatherFailure({ message: data.error }))\n      return\n    }\n\n    yield put(getWeatherSuccess(data))\n  } catch (error) {\n    yield put(getWeatherFailure(error))\n  }\n}\n\nfunction* updateWeatherAfterUnitsChange() {\n  const lastSearch = yield select(selectLastSearch)\n  if (lastSearch) yield put(getWeatherStart(lastSearch))\n}\n\nfunction* updateWeatherOnRange({ payload }) {\n  const currentWeather = yield select(selectCurrentWeather)\n  const dailyWeather = yield select(selectDailyWeather)\n  const timeDiff = dailyWeather[2].time - currentWeather.time\n\n  const time = currentWeather.time + timeDiff * payload\n  yield put(setCurrentSliderTime(time))\n\n  const hourlyWeather = yield select(selectHourlyWeather)\n  const currentWeatherBak = yield select(selectCurrentWeatherBak)\n  // adding current weather backup to hourly weather array\n  // so weather can be restored to current when slider comes back to start\n  const closestMatch = yield call(findClosestHourlyWeather, time, [\n    currentWeatherBak,\n    ...hourlyWeather\n  ])\n\n  const {\n    temperature,\n    summary,\n    icon,\n    humidity,\n    precipProbability,\n    windSpeed,\n    visibility,\n    uvIndex,\n    pressure\n  } = closestMatch\n\n  const valuesToUpdate = {\n    temperature,\n    summary,\n    icon,\n    humidity,\n    precipProbability,\n    windSpeed,\n    visibility,\n    uvIndex,\n    pressure\n  }\n\n  yield put(setCurrentWeather(valuesToUpdate))\n  yield put(setCurrentTheme(icon))\n}\n\nexport function* onGetWeather() {\n  yield takeLatest(WeatherActionTypes.GET_WEATHER_START, getWeather)\n}\n\nexport function* onSetWeatherUnits() {\n  yield takeLatest(\n    WeatherActionTypes.SET_WEATHER_UNITS,\n    updateWeatherAfterUnitsChange\n  )\n}\n\nexport function* onUpdateWeatherRangeProgress() {\n  yield throttle(\n    200,\n    WeatherActionTypes.UPDATE_WEATHER_RANGE_PROGRESS,\n    updateWeatherOnRange\n  )\n}\n\nexport default function* weatherSagas() {\n  yield all([\n    call(onGetWeather),\n    call(onSetWeatherUnits),\n    call(onUpdateWeatherRangeProgress)\n  ])\n}\n","import { takeLatest, put, all, call } from 'redux-saga/effects'\n\nimport WeatherActionTypes from '../weather/weather.types'\nimport { setCurrentTheme } from '../theme/theme.actions'\n\nfunction* updateThemeAfterWeatherSuccess({\n  payload: {\n    currently: { icon }\n  }\n}) {\n  yield put(setCurrentTheme(icon))\n}\n\nexport function* onGetWeatherSuccess() {\n  yield takeLatest(\n    WeatherActionTypes.GET_WEATHER_SUCCESS,\n    updateThemeAfterWeatherSuccess\n  )\n}\n\nexport default function* themeSagas() {\n  yield all([call(onGetWeatherSuccess)])\n}\n","import { all, call } from 'redux-saga/effects'\n\nimport weatherSagas from './weather/weather.sagas'\nimport themeSagas from './theme/theme.sagas'\n\nexport default function* rootSaga() {\n  yield all([call(weatherSagas), call(themeSagas)])\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport logger from 'redux-logger'\nimport { persistStore } from 'redux-persist'\n\nimport rootReducer from './root.reducer'\nimport rootSaga from './root.saga'\n\nconst sagaMiddleware = createSagaMiddleware()\nconst middlewares = [sagaMiddleware]\n// const middlewares = [sagaMiddleware, logger]\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares))\n\nsagaMiddleware.run(rootSaga)\n\nexport const persistor = persistStore(store)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport CustomThemeProvider from './components/custom-theme-provider/custom-theme-provider'\n\nimport { HashRouter as Router } from 'react-router-dom'\n\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport { store, persistor } from './redux/store'\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate persistor={persistor}>\n      <CustomThemeProvider>\n        <Router basename=\"/\">\n          <App />\n        </Router>\n      </CustomThemeProvider>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}